{
    "matched_specifications": [
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "c"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "t"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "j"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "single stage"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "two stages"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "+template diversity"
        ],
        [
            "kind of ambiguity",
            "p"
        ],
        [
            "method",
            "+schema diversity (logicalbeam)"
        ]
    ],
    "unmatched_specifications": [
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ],
        [
            "design decision",
            "single-stage sql generation with prefix for structural diversity"
        ],
        [
            "plan enforcement",
            "yes"
        ],
        [
            "branching control",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "two-stage method with template generation without counterfactual control"
        ],
        [
            "beam search",
            "yes"
        ],
        [
            "template diversity",
            "no"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "forcing counterfactual diversity"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "no"
        ],
        [
            "design decision",
            "restricted fill-in algorithm"
        ],
        [
            "template diversity",
            "yes"
        ],
        [
            "schema diversity",
            "yes"
        ]
    ],
    "unmatched_extracted_keys": [
        "template diversity",
        "branching control",
        "plan enforcement",
        "design decision",
        "schema diversity",
        "beam search"
    ],
    "unmatched_extracted_values": [
        "single-stage sql generation with prefix for structural diversity",
        "no",
        "two-stage method with template generation without counterfactual control",
        "restricted fill-in algorithm",
        "forcing counterfactual diversity",
        "yes"
    ],
    "unmatched_ground_truth_keys": [
        "evaluation type",
        "dataset"
    ],
    "unmatched_ground_truth_values": [
        "either in top k",
        "both in top k (coverage)",
        "ambiqt"
    ],
    "mapped_keys": {
        "kind of ambiguity": "ambiguity type",
        "method": "model"
    },
    "mapped_values": {
        "j": "j",
        "+template diversity": "+template diversity",
        "single stage": "single stage",
        "two stages": "two stages",
        "t": "t",
        "c": "c",
        "p": "p",
        "+schema diversity (logicalbeam)": "+schema diversity (logical beam)"
    },
    "precision": 0.34782608695652173,
    "recall": 0.5
}